/* 4. 조인(JOIN)과 부질의(SUBQUERY)*/
-- 4.1 조인(JOIN)
-- 4.1.1 CROSS 조인
select table_name 
from user_tables;
select * from student;
select * from enrol;
select student.*, enrol.*
from student
cross JOIN ENROL;

-- 4.1.2 ELQI 조인
SELECT STUDENT.STU_NO, STU_NAME, STU_DEPT, ENR_GRADE
FROM STUDENT, ENROL
WHERE STUDENT.STU_NO = ENROL.STU_NO;

SELECT STU_NO, STU_NAME, STU_DEPT, ENR_GRADE
FROM STUDENT NATURAL JOIN ENROL;

SELECT STU_NO, STU_NAME, STU_DEPT, ENR_GRADE
FROM STUDENT JOIN ENROL USING(STU_NO);

SELECT STUDENT.STU_NO, STU_NAME, STU_DEPT, ENR_GRADE
FROM STUDENT JOIN ENROL ON STUDENT.STU_NO = ENROL.STU_NO;

SELECT *
FROM STUDENT;
SELECT *
FROM ENROL;
SELECT STU_NO, STU_NAME, STU_DEPT, ENR_GRADE
FROM ENROL NATURAL JOIN STUDENT;
SELECT STU_NO, STU_NAME, STU_DEPT, ENR_GRADE
FROM ENROL JOIN STUDENT USING(STU_NO);
SELECT STUDENT.STU_NO, STU_NAME
FROM STUDENT, ENROL
WHERE STUDENT.STU_NO = ENROL.STU_NO
AND SUB_NO = 101;

SELECT STUDENT.STU_NO, STU_NAME
FROM STUDENT, ENROL
WHERE STUDENT.STU_NO = ENROL.STU_NO
AND SUB_NO =101 OR SUB_NO =102;

SELECT STUDENT.STU_NO, STU_NAME
FROM STUDENT, ENROL
WHERE STUDENT.STU_NO = ENROL.STU_NO
AND (SUB_NO =101 OR SUB_NO =102);

SELECT STUDENT.STU_NO, STU_NAME, SUB_NAME
FROM STUDENT, ENROL, SUBJECT
WHERE STUDENT.STU_NO = ENROL.STU_NO
AND ENROL.SUB_NO = SUBJECT.SUB_NO
AND ENROL.SUB_NO = 101;

SELECT *
FROM SUBJECT;

SELECT STU_NO, STU_NAME, SUB_NAME
FROM STUDENT NATURAL JOIN ENROL NATURAL JOIN SUBJECT
WHERE SUB_NAME='컴퓨터개론';

SELECT ENROL.STU_NO, STU_NAME, SUB_NAME
FROM STUDENT JOIN ENROL ON STUDENT.STU_NO = ENROL.STU_NO
JOIN SUBJECT ON ENROL.SUB_NO = SUBJECT.SUB_NO
WHERE SUB_NAME='컴퓨터개론';

-- 4.1.3 NON-EQUI 조인
SELECT * FROM EMP; 
SELECT * FROM SALGRADE;

SELECT EMPNO, ENAME, SAL, GRADE
FROM EMP, SALGRADE
WHERE SAL BETWEEN LOSAL AND HISAL;

SELECT A.EMPNO AS 사원번호, A.ENAME AS 사원이름,
B.EMPNO AS 상급자사원번호, B.ENAME AS 상급자이름
FROM EMP A, EMP B
WHERE A.MGR = B.EMPNO;

SELECT A.*, SUB_NAME
FROM ENROL A, SUBJECT B
WHERE A.SUB_NO = B.SUB_NO
ORDER BY 1;

-- 4.2 부질의(SUBQUERY)
SELECT STU_HEIGHT
FROM STUDENT
WHERE STU_NAME = '옥성우';

SELECT STU_NO, STU_NAME, STU_HEIGHT
FROM STUDENT
WHERE STU_HEIGHT > 172;

SELECT STU_NO, STU_NAME, STU_HEIGHT
FROM STUDENT
WHERE STU_HEIGHT >
                (SELECT STU_HEIGHT
                FROM STUDENT
                WHERE STU_NAME='옥성우');
                
SELECT A.STU_NO, A.STU_NAME, A.STU_HEIGHT
FROM STUDENT A, STUDENT B
WHERE A.STU_HEIGHT > B.STU_HEIGHT
AND B.STU_NAME = '옥성우';

SELECT A.STU_NO, A.STU_NAME, A.STU_HEIGHT
FROM STUDENT A, STUDENT B
WHERE A.STU_HEIGHT > B.STU_HEIGHT
AND A.STU_NAME = '옥성우';

SELECT *
FROM STUDENT
WHERE STU_WEIGHT = 
            (SELECT STU_WEIGHT
            FROM STUDENT
            WHERE STU_NAME = '박희철');
            
SELECT A.*
FROM STUDENT A, STUDENT B
(WHERE A.STU_WEIGHT = B.STU_WEIGHT
AND B.STU_NAME='박희철') AND STU_NAME <> '박희철';

SELECT *
FROM STUDENT
WHERE STU_WEIGHT = 
                (SELECT STU_WEIGHT
                FROM STUDENT
                WHERE STU_NAME ='박희철')
                AND STU_NAME <> '박희철';
                
SELECT *
FROM STUDENT
WHERE STU_CLASS IN
(SELECT STU_CLASS
FROM STUDENT
WHERE STU_DEPT = '컴퓨터정보')
AND STU_DEPT <> '컴퓨터정보';


SELECT *
FROM STUDENT
WHERE STU_CLASS <>
(SELECT STU_CLASS
FROM STUDENT
WHERE STU_DEPT = '컴퓨터정보')
AND STU_DEPT <> '컴퓨터정보';

SELECT *
FROM STUDENT
WHERE STU_HEIGHT >
(SELECT AVG(STU_HEIGHT)
FROM STUDENT);

SELECT *
FROM STUDENT
WHERE STU_HEIGHT > ALL
(SELECT AVG(STU_HEIGHT)
FROM STUDENT
GROUP BY STU_DEPT);

SELECT *
FROM STUDENT
WHERE STU_HEIGHT>
(SELECT MAX(AVG(STU_HEIGHT))
FROM STUDENT
GROUP BY STU_DEPT);

SELECT STU_DEPT, MIN(STU_HEIGHT)
FROM STUDENT
GROUP BY STU_DEPT HAVING MIN(STU_HEIGHT)>
                            (SELECT MIN(STU_HEIGHT)
                            FROM STUDENT
                            WHERE STU_DEPT = '컴퓨터정보');
                            
SELECT *
FROM STUDENT
WHERE STU_NO IN
(SELECT STU_NO
FROM ENROL
WHERE SUB_NO = 101);

SELECT A.*
FROM STUDENT A, ENROL B
WHERE A.STU_NO = B.STU_NO AND SUB_NO = 101;

SELECT A.STU_NO, A.STU_NAME, B.ENR_GRADE
FROM STUDENT A, ENROL B
WHERE A.STU_NO = B.STU_NO AND B.SUB_NO =101;

CREATE TABLE TEST(EMPNO, ENAME, SAL, COMM, DEPTNO)
AS
    SELECT EMPNO, ENAME, SAL, COMM, DEPTNO
    FROM EMP
    WHERE DEPTNO = 1;

INSERT INTO TEST VALUES(11, 'APPLE', 1000, NULL, 30);
INSERT INTO TEST VALUES(12, 'BANANA', 2000, 100, 30);
INSERT INTO TEST VALUES(13, 'CHEESE', 1000, 0, 10);
INSERT INTO TEST VALUES(14, 'DOG', 2000, NULL, 20);
INSERT INTO TEST VALUES(15, 'EGG', 1000, 100, 20);

SELECT *
FROM TEST;

SELECT*
FROM TEST
WHERE (SAL, NVL(COMM, -1)) =
            (SELECT SAL, NVL(COMM,-1)
            FROM TEST
            WHERE EMPNO = 11);
            
SELECT *
FROM TEST
WHERE (SAL, NVL(COMM, -1)) IN (SELECT SAL, NVL(COMM, -1)
FROM TEST
WHERE DEPTNO =30);

-- 4.2.3 FROM 절의 부질의

SELECT STU_DEPT, ROUND(AVG(STU_HEIGHT),2) AS AVG_HEIGHT
FROM STUDENT
GROUP BY STU_DEPT;

SELECT STU_NO, STU_NAME, A.STU_DEPT, STU_HEIGHT, AVG_HEIGHT
FROM STUDENT A, (SELECT STU_DEPT, ROUND(AVG(STU_HEIGHT),2) AS AVG_HEIGHT
FROM STUDENT
GROUP BY STU_DEPT) B
WHERE A.STU_DEPT = B.STU_DEPT AND STU_HEIGHT > AVG_HEIGHT;

-- 4.3 집합(SET)연산자
-- 4.3.2 집합연산자 사용 규칙

CREATE TABLE A_STUDENT
AS SELECT *
FROM STUDENT
WHERE STU_DEPT IN ('기계', '전기전자');

CREATE TABLE B_STUDENT
AS SELECT *
FROM STUDENT
WHERE STU_DEPT IN ('전기전자','컴퓨터정보');

SELECT * FROM A_STUDENT;
SELECT * FROM B_STUDENT;

SELECT * FROM A_STUDENT
UNION
SELECT * FROM B_STUDENT;

SELECT * FROM A_STUDENT
UNION ALL
SELECT * FROM B_STUDENT;

SELECT * FROM A_STUDENT
INTERSECT
SELECT * FROM B_STUDENT;

SELECT * FROM A_STUDENT
MINUS
SELECT * FROM B_STUDENT;